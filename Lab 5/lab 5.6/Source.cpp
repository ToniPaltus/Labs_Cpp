/*
3.Вычислить следующие интегралы заданным методом(M = 1 – метод левых
прямоугольников, М = 2 – метод правых прямоугольников, М = 3 – метод средних
прямоугольников, М = 4 – метод трапеции, М = 5 – метод Симпсона.), воспользовавшись критерием двойного пересчета, с точностью eps = 10–6.
Значения параметра s : si[s1; s2], si = s1 + is, i = 0, 1, … .
Значения параметра t : ti[t1; t2], ti = t1 + it, i = 0, 1, … .
Вычисление значения функции в точке оформить в виде функции, вычисление
интеграла – в виде функции с параметром функционального типа для задания
функции.Процедуры оформить в виде отдельного файла.
Результаты представить в виде таблицы(s, t – соответствующие значения
параметров, Int – вычисленное значение интеграла, k_iter – количество пересчетов значений интеграла для получения заданной точности)
*/

#include <iostream>
#include <iomanip>
#include <math.h>
#include "Header.h"
using namespace std;

// подкоренное выражение
double Func(double x, double s, double t)
{
	return pow(1 + x * x, 1 / t) / exp(sin(x) + s);
}
void main()
{
	// Метод 1 (левых прямоугольников)
	double a = -1.0,
		b = 1.0,
		eps = 1e-6,
		Int;

	double s1 = 0.0, s2 = 2.0, dels = 0.5;
	double t1 = 2.0, t2 = 5.0, delt = 1.0;

	cout << "|" << setw(12) << "s" << "|" << setw(12) << "t" << "|" << setw(12) << "Integral" << "|" << setw(12) << "k_iter" << "|" << endl;

	for (double i = s1; i <= s2; i += dels)
	{
		for (double j = t1; j <= t2; j += delt)
		{
			int k_iter = 0;
			Vych_Int(a, b, eps, i, j, &Func, Int, k_iter);
			cout << "|" << setw(12) << i << "|" << setw(12) << j << "|" << setw(12) << Int << "|" << setw(12) << k_iter << "|" << endl;
		}
	}

}
