/*
	8.8. КЛАСС «МАТРИЦА»

Объявить класс «Матрица» и определить его методы.
Обеспечить представление матрицы произвольного размера с возможностью изменения числа строк и столбцов.

Обеспечить в конструкторе автоматическое генерирование имени матрицы («матрица 1», «матрица 2»),+
используя для этого статическое поле – счетчик объектов класса.+

Реализовать в классе метод вывода матрицы на экран с одновременным выводом ее имени.+
Алгоритм обработки, реализующий условие задачи, определить как функцию-член класса или как дружественную функцию класса.+

Перегрузить оператор индексирования [] для обращения к элементам матрицы с контролем выхода за пределы размерностей.+
В случае выхода за пределы массива генерировать исключения с помощью ключевого слова throw.+
Используя объекты описанного класса «Матрица», реализовать алгоритм своего варианта задания 7.2.+

3. Дана вещественная квадратная матрица А порядка n, вектор b с n элементами.
Составить функцию, которая позволяет получить вектор c = А^2 * b.
*/

#include "Matrix.h"

int main()
{
	int rows = 0;
	int cols = 0;
	cout << "Enter rows: ";
	cin >> rows;
	cout << "Enter cols: ";
	cin >> cols;

	Matrix A(rows, cols);
	A.fill_random();
	cout << A << endl;

	Matrix A_2;
	A_2 = A * A;
	cout << "A^2: " << endl;
	cout << A_2 << endl;

	int cols_vec = 0;
	cout << "Enter cols_vec: ";
	cin >> cols_vec;

	Matrix b(1, cols_vec);
	b.fill_random();
	cout << "b: " << endl;
	cout << b << endl;

	Matrix b_T;
	b_T = b.get_transposed();

	Matrix c(1, cols_vec);
	c = A_2 * b_T;
	cout << "c:" << endl;
	cout << c << endl;

	return 0;
}